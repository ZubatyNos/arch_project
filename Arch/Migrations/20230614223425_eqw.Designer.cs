// <auto-generated />
using System;
using ArchProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArchProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230614223425_eqw")]
    partial class eqw
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArchProject.Models.CartEntry", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("StoreId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("CartEntry");
                });

            modelBuilder.Entity("ArchProject.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("StoreId");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Burger with a kick",
                            Name = "Molotov burger"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lame burger",
                            Name = "Vegan burger"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Just fries, man",
                            Name = "Fries"
                        },
                        new
                        {
                            Id = 4,
                            Description = ":)))",
                            Name = "Coke"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Best one",
                            Name = "Hasbulla burger"
                        });
                });

            modelBuilder.Entity("ArchProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ArchProject.Models.OrderStoreFood", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "StoreId", "FoodId");

                    b.HasIndex("FoodId");

                    b.HasIndex("StoreId");

                    b.ToTable("OrderStoreFood");
                });

            modelBuilder.Entity("ArchProject.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("ClosingTime")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("OpeningTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClosingTime = new TimeSpan(0, 20, 0, 0, 0),
                            Name = "Hipstersky store",
                            OpeningTime = new TimeSpan(0, 16, 30, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            ClosingTime = new TimeSpan(0, 23, 0, 0, 0),
                            Name = "Tuniaky",
                            OpeningTime = new TimeSpan(0, 0, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("ArchProject.Models.StoreFood", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("StoreId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("StoreFood");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            FoodId = 1,
                            Price = 20
                        },
                        new
                        {
                            StoreId = 1,
                            FoodId = 2,
                            Price = 30
                        },
                        new
                        {
                            StoreId = 1,
                            FoodId = 3,
                            Price = 40
                        },
                        new
                        {
                            StoreId = 1,
                            FoodId = 4,
                            Price = 50
                        },
                        new
                        {
                            StoreId = 1,
                            FoodId = 5,
                            Price = 60
                        });
                });

            modelBuilder.Entity("ArchProject.Models.CartEntry", b =>
                {
                    b.HasOne("ArchProject.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArchProject.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ArchProject.Models.Food", b =>
                {
                    b.HasOne("ArchProject.Models.Order", null)
                        .WithMany("Foods")
                        .HasForeignKey("OrderId");

                    b.HasOne("ArchProject.Models.Store", null)
                        .WithMany("Foods")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("ArchProject.Models.Order", b =>
                {
                    b.HasOne("ArchProject.Models.Store", null)
                        .WithMany("Orders")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("ArchProject.Models.OrderStoreFood", b =>
                {
                    b.HasOne("ArchProject.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArchProject.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArchProject.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Order");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ArchProject.Models.StoreFood", b =>
                {
                    b.HasOne("ArchProject.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArchProject.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ArchProject.Models.Order", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("ArchProject.Models.Store", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
